[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "momentum-predictor-bot"
version = "1.0.0"
description = "Bot de predicciÃ³n de momentum para trading de criptomonedas"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Tu Nombre", email = "tu.email@example.com"}
]
keywords = ["trading", "cryptocurrency", "momentum", "machine-learning", "bot"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Office/Business :: Financial :: Investment",
]

dependencies = [
    "numpy>=1.21.0",
    "pandas>=1.5.0",
    "scikit-learn>=1.2.0",
    "ccxt>=4.0.0",
    "pyyaml>=6.0",
    "python-dotenv>=0.19.0",
    "requests>=2.28.0",
    "aiohttp>=3.8.0",
]

[project.optional-dependencies]
dev = [
    "black>=22.0.0",
    "isort>=5.11.0",
    "flake8>=6.0.0",
    "pytest>=7.2.0",
    "pytest-cov>=4.0.0",
]
ml = [
    "torch>=1.13.0",
    "transformers>=4.25.0",
    "xgboost>=1.7.0",
]
jupyter = [
    "jupyter>=1.0.0",
    "notebook>=6.5.0",
    "matplotlib>=3.6.0",
    "seaborn>=0.12.0",
]

[project.urls]
Homepage = "https://github.com/tu-usuario/momentum-predictor-bot"
Repository = "https://github.com/tu-usuario/momentum-predictor-bot.git"
Issues = "https://github.com/tu-usuario/momentum-predictor-bot/issues"

[project.scripts]
momentum-bot = "src.main:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "ccxt.*",
    "ta.*",
    "pandas_ta.*",
]
ignore_missing_imports = true
